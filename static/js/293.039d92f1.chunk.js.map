{"version":3,"file":"static/js/293.039d92f1.chunk.js","mappings":"yMACA,GAAgB,QAAU,yBAAyB,KAAO,uB,iBCS1D,EARiB,SAACA,GACd,OACIC,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAACE,EAAAA,GAAO,CAACC,GAAE,YAAAC,OAAcL,EAAMM,IAAKJ,SAAEF,EAAMO,QAGxD,ECEA,EARgB,SAACP,GACb,OACIC,EAAAA,EAAAA,KAAA,OAAKO,UAAU,WAAUN,UACrBD,EAAAA,EAAAA,KAAA,OAAKO,UAAU,UAASN,SAAEF,EAAMS,WAG5C,ECkCA,EApCgB,SAACT,GACb,IAAIU,EAAmBV,EAAMW,YAAYC,KAAI,SAACC,GAAE,OAAKZ,EAAAA,EAAAA,KAACa,GAAQC,EAAAA,EAAAA,GAAA,GAAKF,GAAM,IACrEG,EAAkBhB,EAAMiB,YAAYL,KAAI,SAACC,GAAE,OAC3CZ,EAAAA,EAAAA,KAACiB,GAAOH,EAAAA,EAAAA,GAAA,GAAKF,GAAc,IAG3BM,EAAeC,EAAAA,YAUnB,OACIC,EAAAA,EAAAA,MAAA,OAAKb,UAAWc,EAAAA,QAAgBpB,SAAA,EAC5BD,EAAAA,EAAAA,KAAA,OAAKO,UAAWc,EAAAA,MAAcpB,SAAEQ,KAChCW,EAAAA,EAAAA,MAAA,OAAAnB,SAAA,EACID,EAAAA,EAAAA,KAAA,OAAKO,UAAWc,EAAAA,KAAapB,SAAEc,KAC/Bf,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAA,YACIsB,IAAKJ,EACLK,SAhBO,WACvB,IAAIC,EAAON,EAAaO,QAAQC,MAChC3B,EAAM4B,mBAAmBH,EAC7B,EAcoBE,MAAO3B,EAAM6B,oBAGrB5B,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAAA,UAAQ6B,QAhBJ,WAChB9B,EAAM+B,eACV,EAc+C7B,SAAC,wBAKpD,E,SCNA,GAAe8B,E,OAAAA,KACXC,EAAAA,EAAAA,KA3BkB,SAACC,GACnB,MAAO,CACHvB,YAAauB,EAAMC,oBAAoBxB,YACvCM,YAAaiB,EAAMC,oBAAoBlB,YACvCY,eAAgBK,EAAMC,oBAAoBN,eAElD,IACyB,SAACO,GACtB,MAAO,CACHL,cAAe,WACX,IAAIM,GAASC,EAAAA,EAAAA,MACbF,EAASC,EACb,EACAT,mBAAoB,SAACH,GACjB,IAAIY,GAASE,EAAAA,EAAAA,IAA8Bd,GAC3CW,EAASC,EACb,EAER,IAUIG,EAAAA,EAFJ,CAGEC,E","sources":["webpack://react-practice/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialogue/Dialogue.js","components/Dialogs/Message/Message.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__yuDY1\",\"view\":\"Dialogs_view__lluRQ\"};","import { NavLink } from 'react-router-dom';\r\n\r\nconst Dialogue = (props) => {\r\n    return (\r\n        <div>\r\n            <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogue;\r\n","import c from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className=\"messages\">\r\n            <div className=\"message\">{props.message}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport classes from './Dialogs.module.css';\r\nimport Dialogue from './Dialogue/Dialogue';\r\nimport Message from './Message/Message';\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogueElements = props.dialogsData.map((el) => <Dialogue {...el} />);\r\n    let messageElements = props.messageData.map((el) => (\r\n        <Message {...el}></Message>\r\n    ));\r\n\r\n    let dialogueArea = React.createRef();\r\n\r\n    let onChangeDialogueText = () => {\r\n        let text = dialogueArea.current.value;\r\n        props.changeDialogueText(text);\r\n    };\r\n\r\n    let onSendMessage = () => {\r\n        props.addNewMessage();\r\n    };\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.users}>{dialogueElements}</div>\r\n            <div>\r\n                <div className={classes.view}>{messageElements}</div>\r\n                <div>\r\n                    <textarea\r\n                        ref={dialogueArea}\r\n                        onChange={onChangeDialogueText}\r\n                        value={props.newTextMessage}\r\n                    ></textarea>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onSendMessage}>Send message</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;\r\n","import {\r\n    addMessageActionCreator,\r\n    updateNewMessageActionCreator,\r\n} from '../../redux/dialogs-reducer';\r\nimport { withoutAuthRedirect } from '../../hocs/authRedirect';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.messagesGeneralData.dialogsData,\r\n        messageData: state.messagesGeneralData.messageData,\r\n        newTextMessage: state.messagesGeneralData.newTextMessage,\r\n    };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addNewMessage: () => {\r\n            let action = addMessageActionCreator();\r\n            dispatch(action);\r\n        },\r\n        changeDialogueText: (text) => {\r\n            let action = updateNewMessageActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n    };\r\n};\r\n// const DialogueWithAuthRedirect = withAuthRedirect(Dialogs);\r\n\r\n// const DialogsContainer = connect(\r\n//     mapStateToProps,\r\n//     mapDispatchToProps\r\n// )(DialogueWithAuthRedirect);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withoutAuthRedirect\r\n)(Dialogs);\r\n"],"names":["props","_jsx","children","NavLink","to","concat","id","name","className","message","dialogueElements","dialogsData","map","el","Dialogue","_objectSpread","messageElements","messageData","Message","dialogueArea","React","_jsxs","classes","ref","onChange","text","current","value","changeDialogueText","newTextMessage","onClick","addNewMessage","compose","connect","state","messagesGeneralData","dispatch","action","addMessageActionCreator","updateNewMessageActionCreator","withoutAuthRedirect","Dialogs"],"sourceRoot":""}